<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaokw.server.mapper.TEmployeeMapper">

    <resultMap id="BaseResultMap" type="com.xiaokw.server.entity.TEmployee">
        <id column="id" property="id"/>
        <result property="name" column="name"/>
        <result property="gender" column="gender"/>
        <result property="birthday" column="birthday"/>
        <result property="idCard" column="idCard"/>
        <result property="wedlock" column="wedlock"/>
        <result property="nationId" column="nationId"/>
        <result property="nativePlace" column="nativePlace"/>
        <result property="politicId" column="politicId"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="address" column="address"/>
        <result property="departmentId" column="departmentId"/>
        <result property="jobLevelId" column="jobLevelId"/>
        <result property="posId" column="posId"/>
        <result property="engageForm" column="engageForm"/>
        <result property="tiptopDegree" column="tiptopDegree"/>
        <result property="specialty" column="specialty"/>
        <result property="school" column="school"/>
        <result property="beginDate" column="beginDate"/>
        <result property="workState" column="workState"/>
        <result property="workID" column="workID"/>
        <result property="contractTerm" column="contractTerm"/>
        <result property="conversionTime" column="conversionTime"/>
        <result property="notWorkDate" column="notWorkDate"/>
        <result property="beginContract" column="beginContract"/>
        <result property="endContract" column="endContract"/>
        <result property="workAge" column="workAge"/>
        <result property="salaryId" column="salaryId"/>
    </resultMap>
    <resultMap id="EmployInfo" extends="BaseResultMap" type="com.xiaokw.server.entity.TEmployee">
        <association property="nation" javaType="com.xiaokw.server.entity.TNation">
            <id property="id" column="nid"/>
            <result column="nname" property="name"/>
        </association>
        <association property="department" javaType="com.xiaokw.server.entity.TDepartment">
            <id property="id" column="did"/>
            <result column="dname" property="name"/>
            <result column="dparentId" property="parentId"/>
            <result column="ddepPath" property="depPath"/>
            <result column="denabled" property="enabled"/>
            <result column="disParent" property="isParent"/>
        </association>
        <association property="joblevel" javaType="com.xiaokw.server.entity.TJoblevel">
            <id property="id" column="jid"/>
            <result column="jname" property="name"/>
            <result column="jtitleLevel" property="titleLevel"/>
            <result column="jcreateDate" property="createDate"/>
            <result column="jenabled" property="enabled"/>
        </association>
        <association property="politicsStatus" javaType="com.xiaokw.server.entity.TPoliticsStatus">
            <id property="id" column="pid"/>
            <result column="pname" property="name"/>
        </association>
        <association property="position" javaType="com.xiaokw.server.entity.TPosition">
            <id property="id" column="posid2"/>
            <result column="posname" property="name"/>
            <result column="poscreateDate" property="createDate"/>
            <result column="posenabled" property="enabled"/>
        </association>
    </resultMap>

    <resultMap id="EmployeeWithSalary" type="com.xiaokw.server.entity.TEmployee" extends="BaseResultMap">
        <association property="salary" javaType="com.xiaokw.server.entity.TSalary">
            <id property="id" column="sid"/>
            <result column="sbasicSalary" property="basicSalary"/>
            <result column="sbonus" property="bonus"/>
            <result column="slunchSalary" property="lunchSalary"/>
            <result column="strafficSalary" property="trafficSalary"/>
            <result column="sallSalary" property="allSalary"/>
            <result column="spensionBase" property="pensionBase"/>
            <result column="spensionPer" property="pensionPer"/>
            <result column="smedicalBase" property="medicalBase"/>
            <result column="smedicalPer" property="medicalPer"/>
            <result column="saccumulationFundBase" property="accumulationFundBase"/>
            <result column="saccumulationFundPer" property="accumulationFundPer"/>
            <result column="sname" property="name"/>
        </association>
        <association property="department" javaType="com.xiaokw.server.entity.TDepartment">
            <result column="dname" property="name"/>
        </association>
    </resultMap>

    <sql id="SelectAllEmpById">
        SELECT e.*,
               n.id AS aid,
               n.`name` AS nname,
               p.id AS pid,
               p.`name` AS pname,
               d.id AS did,
               d.`name` AS dname,
               d.parentId AS dparentId,
               d.depPath AS ddepPath,
               d.enabled AS denabled,
               d.isParent AS disParent,
               j.id AS jid,
               j.`name` AS jname,
               j.titleLevel AS jtitleLevel,
               j.createDate AS jcreateDate,
               j.enabled AS jenabled,
               pos.id AS posid2,
               pos.`name` AS posname,
               pos.createDate AS poscreateDate,
               pos.enabled AS posenabled
        FROM t_employee e,
             t_nation n,
             t_politics_status p,
             t_department d,
             t_joblevel j,
             t_position pos
        WHERE e.nationId = n.id
          AND e.politicId = p.id
          AND e.departmentId = d.id
          AND e.jobLevelId = j.id
          AND e.posId = pos.id
    </sql>
    <!--获取所有员工（分页）-->
    <select id="getEmployeeByPage" resultMap="EmployInfo">
        <include refid="SelectAllEmpById"/>

        <if test="null != employee.id">
            AND e.id =#{employee.id}
        </if>
        <if test="null != employee.name and '' != employee.name">
            AND e.`name` LIKE CONCAT( '%', #{employee.name}, '%' )
        </if>
        <if test="null != employee.politicId">
            AND e.politicId =#{employee.politicId}
        </if>
        <if test="null != employee.departmentId">
            AND e.departmentId =#{employee.departmentId}
        </if>
        <if test="null != employee.jobLevelId">
            AND e.jobLevelId =#{employee.jobLevelId}
        </if>
        <if test="null != employee.posId">
            AND e.posId =#{employee.posId}
        </if>
        <if test="null != employee.engageForm and '' != employee.engageForm">
            AND e.engageForm =#{employee.engageForm}
        </if>
        <if test="null != employee.nationId">
            AND e.nationId =#{employee.nationId}
        </if>
        <if test="null != beginDateScope and 2 == beginDateScope.length">
            AND e.beginDate BETWEEN #{beginDateScope[0]} AND #{beginDateScope[1]}
        </if>
        ORDER BY
        e.id
    </select>
    <select id="getEmployee" resultMap="EmployInfo" parameterType="java.lang.Integer">
        <include refid="SelectAllEmpById"/>
        <if test="null != id">
            AND e.id =#{id}
        </if>
        ORDER BY
        e.id
    </select>
    <select id="getEmployeeWithSalary" resultMap="EmployeeWithSalary">
        SELECT
            e.*,
            d.`name` AS dname,
            s.id AS sid,
            s.`name` AS sname,
            s.basicSalary AS sbasicSalary,
            s.bonus AS sbonus,
            s.lunchSalary AS slunchSalary,
            s.trafficSalary AS strafficSalary,
            s.allSalary AS sallSalary,
            s.pensionPer AS spensionPer,
            s.pensionBase AS spensionBase,
            s.medicalBase AS smedicalBase,
            s.medicalPer AS smedicalPer,
            s.accumulationFundBase AS saccumulationFundBase,
            s.accumulationFundPer AS saccumulationFundPer
        FROM
            t_employee e
                LEFT JOIN t_salary s ON e.salaryId = s.id
                LEFT JOIN t_department d ON e.departmentId = d.id
        ORDER BY
            e.id
    </select>
</mapper>
